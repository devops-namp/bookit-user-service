# DataSource Configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DATASOURCE_USERNAME:postgres}
quarkus.datasource.password=${DATASOURCE_PASSWORD:root}
quarkus.datasource.jdbc.url=${DATASOURCE_URL:jdbc:postgresql://localhost:5432/bookit-users}
quarkus.hibernate-orm.database.generation=${HIBERNATE_GENERATION:drop-and-create}
quarkus.hibernate-orm.sql-load-script=${SQL_LOAD_SCRIPT:data-postgres.sql}

# SmallRye JWT
quarkus.smallrye-jwt.enabled=true
mp.jwt.verify.publickey.location=${JWT_PUBLICKEY_LOCATION:publickey.pem}
mp.jwt.verify.issuer=${JWT_ISSUER:https://example.com}

# Custom JWT Properties
quarkusjwt.jwt.duration=${JWT_DURATION:360000}
quarkusjwt.password.secret=${JWT_SECRET:mysecret}
quarkusjwt.password.iteration=33
quarkusjwt.password.keylength=256

# Live Reload
quarkus.live-reload.instrumentation=true

# Mailer Configuration
quarkus.mailer.auth-methods=DIGEST-MD5 CRAM-SHA256 CRAM-SHA1 CRAM-MD5 PLAIN LOGIN
quarkus.mailer.from=${MAILER_FROM:projekatisa365@gmail.com}
quarkus.mailer.host=smtp.gmail.com
quarkus.mailer.port=587
quarkus.mailer.ssl=false
quarkus.mailer.start-tls=REQUIRED
quarkus.mailer.mock=false

# Scheduler
quarkus.scheduler.enabled=true

# CORS
quarkus.http.cors=${CORS:true}
quarkus.http.cors.origins=${CORS_ORIGINS:http://localhost:5173}

# Jaeger Tracing
quarkus.jaeger.endpoint=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
quarkus.jaeger.service-name=${JAEGER_SERVICE_NAME:bookit-user-service}
quarkus.jaeger.sampler-type=${JAEGER_SAMPLER_TYPE:const}
quarkus.jaeger.sampler-param=${JAEGER_SAMPLER_PARAM:1}


# Metrics
quarkus.micrometer.export.prometheus.enabled=true
quarkus.micrometer.export.prometheus.path=/q/metrics
quarkus.micrometer.binder.http-server.enabled=true
quarkus.micrometer.binder.http-client.enabled=true


# Rabbit-mq
quarkus.rabbitmq.url=amqp://${RABBITMQ_USERNAME}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}

mp.messaging.incoming.autoapprove-acc-to-user-queue.connector=smallrye-rabbitmq
mp.messaging.incoming.autoapprove-acc-to-user-queue.queue.name=autoapprove-acc-to-user-queue
mp.messaging.incoming.autoapprove-acc-to-user-queue.exchange.name=autoapprove-acc-to-user-queue
mp.messaging.incoming.autoapprove-acc-to-user-queue.durable=true
mp.messaging.incoming.autoapprove-acc-to-user-queue.routing-key=autoapprove-acc-to-user-queue

mp.messaging.outgoing.autoapprove-user-to-acc-queue.connector=smallrye-rabbitmq
mp.messaging.outgoing.autoapprove-user-to-acc-queue.exchange.name=autoapprove-user-to-acc-queue
mp.messaging.outgoing.autoapprove-user-to-acc-queue.queue.name=autoapprove-user-to-acc-queue
mp.messaging.outgoing.autoapprove-user-to-acc-queue.durable=true
mp.messaging.outgoing.autoapprove-user-to-acc-queue.routing-key=autoapprove-user-to-acc-queue


mp.messaging.outgoing.delete-accommodation-queue.connector=smallrye-rabbitmq
mp.messaging.outgoing.delete-accommodation-queue.exchange.name=delete-accommodation-queue
mp.messaging.outgoing.delete-accommodation-queue.queue.name=delete-accommodation-queue
mp.messaging.outgoing.delete-accommodation-queue.automatic-recovery-enabled=true
mp.messaging.outgoing.delete-accommodation-queue.automatic-recovery-on-initial-connection=true
mp.messaging.outgoing.delete-accommodation-queue.durable=true
mp.messaging.outgoing.delete-accommodation-queue.routing-key=delete-accommodation-queue


mp.messaging.incoming.notification-queue.connector=smallrye-rabbitmq
mp.messaging.incoming.notification-queue.queue.name=notification-queue
mp.messaging.incoming.notification-queue.exchange.name=notification-queue
mp.messaging.incoming.notification-queue.durable=true
mp.messaging.incoming.notification-queue.routing-key=notification-queue

mp.messaging.outgoing.notification-check-queue.connector=smallrye-rabbitmq
mp.messaging.outgoing.notification-check-queue.exchange.name=notification-check-queue
mp.messaging.outgoing.notification-check-queue.queue.name=notification-check-queue
mp.messaging.outgoing.notification-check-queue.durable=true
mp.messaging.outgoing.notification-check-queue.routing-key=notification-check-queue


# Add logging configuration here, save it to a file, or use the default logging configuration
quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c{3.}] (%t) %s%e%n
quarkus.log.console.json=true
quarkus.log.level=INFO
# set log location
quarkus.log.file.enable=true
quarkus.log.file.path=${LOG_PATH:logs/bookit-user-service.log}
quarkus.log.file.rotation.max-file-size=10M
quarkus.log.file.rotation.max-backup-index=5

quarkus.rest-client.accommodation-api.url=${ACCOMMODATION_API_URL:http://localhost:8081}
quarkus.rest-client.accommodation-api.scope=jakarta.inject.Singleton
